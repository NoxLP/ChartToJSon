<base:ChartEntityResizeWithViewBoxMoveRotate x:Class="ChartCanvasNamespace.Entities.EntityBorderUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ChartCanvasNamespace.Entities"
                                               xmlns:chartRoot="clr-namespace:ChartCanvasNamespace"
                                          xmlns:base="clr-namespace:ChartCanvasNamespace.VisualsBase"
                                          xmlns:thumbs="clr-namespace:ChartCanvasNamespace.Thumbs"
                                          xmlns:sys="clr-namespace:System;assembly=mscorlib"
                                          xmlns:props="clr-namespace:ChartCanvasNamespace.Properties"
             mc:Ignorable="d" x:Name="Root" Loaded="Root_Loaded" SizeChanged="Root_SizeChanged" KeyDown="OnKeyDown" KeyUp="OnKeyUp" SnapsToDevicePixels="True"
             Canvas.Left="{Binding CanvasX,Mode=TwoWay}" Canvas.Top="{Binding CanvasY,Mode=TwoWay}" IsSelected="{Binding IsSelected,Mode=TwoWay}" Background="Transparent"
             d:DesignHeight="450" d:DesignWidth="800">
    <!--SizeChanged="UserControl_SizeChanged"-->
    <UserControl.Resources>
        <ResourceDictionary>
            <!--<converters:GetTagFromShapeConverter x:Key="GetTagFromShapeTemplateConverter"/>-->
            <ObjectDataProvider x:Key="ConnectingThumbsTypes"
                MethodName="GetValues" 
                ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="thumbs:EntityConnectingThumbTypesEnum" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ChartCanvas;component/Resources/ResDict0.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Name="RootGrid" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
          KeyDown="OnKeyDown" KeyUp="OnKeyUp"
          MouseDown="RootGrid_MouseDown" MouseUp="RootGrid_MouseUp" MouseEnter="RootGrid_MouseEnter" MouseLeave="RootGrid_MouseLeave">
        <Grid.RowDefinitions>
            <RowDefinition Height="15"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="15"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="15"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="15"/>
        </Grid.ColumnDefinitions>
        <local:EntityRotatingThumb x:Name="RotatingThumb" Grid.Row="0" Grid.Column="1" SnapsToDevicePixels="True" Width="12" Height="12"
                                       Visibility="Hidden" KeyDown="OnKeyDown" KeyUp="OnKeyUp" 
                                       DragStarted="RotatingThumb_DragStarted" DragCompleted="RotatingThumb_DragCompleted" DragDelta="RotatingThumb_DragDelta" 
                                   MouseDoubleClick="RotatingThumb_MouseDoubleClick" PreviewMouseDoubleClick="RotatingThumb_MouseDoubleClick"/>
        <!--PreviewMouseLeftButtonDown="RotatingThumb_PreviewMouseDown" PreviewMouseLeftButtonUp="RotatingThumb_PreviewMouseUp" PreviewMouseMove="RotatingThumb_PreviewMouseMove"/>-->
            <local:EntityConnectingThumb x:Name="ThTop" Grid.Row="0" Grid.Column="1" Width="10" Height="10" IsHitTestVisible="True"
                              MyBorder="{Binding ElementName=Root}" MyEntityViewModel="{Binding ElementName=Root,Path=DataContext}" Type="Top"/>
        <local:EntityConnectingThumb x:Name="ThLeft" Grid.Row="1" Grid.Column="0" Height="10"
                              MyBorder="{Binding ElementName=Root}" MyEntityViewModel="{Binding ElementName=Root,Path=DataContext}" Type="Left"/>
        <local:EntityConnectingThumb x:Name="ThRight" Grid.Row="1" Grid.Column="2" Height="10"
                              MyBorder="{Binding ElementName=Root}" MyEntityViewModel="{Binding ElementName=Root,Path=DataContext}" Type="Right"/>
        <local:EntityConnectingThumb x:Name="ThBottom" Grid.Row="2" Grid.Column="1" Width="10"
                              MyBorder="{Binding ElementName=Root}" MyEntityViewModel="{Binding ElementName=Root,Path=DataContext}" Type="Bottom"/>
        <local:EntityMovingThumb x:Name="MovingThumb" Grid.Row="2" Grid.Column="2" SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Top"
                                 Visibility="Visible" Width="12" Height="12"
                                 PreviewMouseDown="MovingThumb_PreviewMouseDown" PreviewMouseUp="MovingThumb_PreviewMouseUp" PreviewMouseMove="MovingThumb_PreviewMouseMove"
                                 KeyDown="OnKeyDown" KeyUp="OnKeyUp"/>
        <local:EntityResizingThumb x:Name="ResizingThumb" Grid.Row="2" Grid.Column="2" SnapsToDevicePixels="True"
                                   VerticalAlignment="Top" Height="10" Width="10" HorizontalAlignment="Left" Visibility="Hidden"
                                   PreviewMouseDown="ResizingThumb_PreviewMouseDown" PreviewMouseUp="ResizingThumb_PreviewMouseUp" PreviewMouseMove="ResizingThumb_PreviewMouseMove"
                                   KeyDown="OnKeyDown" KeyUp="OnKeyUp"/>
        <Grid Name="ContentGrid" Grid.Row="1" Grid.Column="1" UseLayoutRounding="True" Background="Transparent" Width="auto" Height="auto" IsHitTestVisible="True">
            <ContentPresenter x:Name="BorderShape" IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Center"
                              Panel.ZIndex="{Binding Source={x:Static props:Settings.Default},Path=ZIndex_EntityShape}"
                              Content="{Binding ElementName=Root,Path=MyShape, Mode=OneWay}"/>
            <Viewbox Name="ContentView" UseLayoutRounding="True" SnapsToDevicePixels="True" HorizontalAlignment="Center" VerticalAlignment="Center"
                     Panel.ZIndex="{Binding Source={x:Static props:Settings.Default},Path=ZIndex_EntityContentUserControl}">
                <ContentControl x:Name="BorderContent" DataContext="{Binding .}" Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center"
                            SizeChanged="BorderContent_SizeChanged"
                                Panel.ZIndex="{Binding Source={x:Static props:Settings.Default},Path=ZIndex_EntityContentUserControl}"
                            Content="{Binding ElementName=Root,Path=DataContext, Mode=TwoWay}"
                            ContentTemplateSelector="{Binding Source={x:Static chartRoot:ChartCustomControl.Instance}, Path=EntityContentTemplateSelector, Mode=OneWay}"/>
            </Viewbox>
        </Grid>


        <!--<Border Name="SelectionBorder" Grid.Row="1" Grid.Column="1" CornerRadius="15"
                BorderBrush="{StaticResource SelectionBorderSelectedBrush}" BorderThickness="{Binding ElementName=Root, Path=SelectionBorderThickness}">
            <Grid>
                <Viewbox Name="ShapeView" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                         Panel.ZIndex="{Binding Source={x:Static props:Settings.Default},Path=ZIndex_EntityShape}">
                    <ContentPresenter x:Name="BorderShape" IsHitTestVisible="False"
                                  Content="{Binding ElementName=Root,Path=DataContext.ShapeTemplateKey, Mode=TwoWay}"
                                  ContentTemplateSelector="{Binding Source={x:Static chartRoot:ChartCustomControl.Instance}, Path=EntityShapeTemplateSelector, Mode=OneWay}"/>
                </Viewbox>
                <Grid>
                    <Grid.OpacityMask>
                        <VisualBrush Visual="{Binding ElementName=BorderShape}" />
                    </Grid.OpacityMask>
                    <ContentControl x:Name="BorderContent" DataContext="{Binding .}" Background="Transparent"
                                Content="{Binding ElementName=Root,Path=DataContext, Mode=TwoWay}"
                                ContentTemplateSelector="{Binding Source={x:Static chartRoot:ChartCustomControl.Instance}, Path=EntityContentTemplateSelector, Mode=OneWay}"/>
                </Grid>
            </Grid>
            --><!--DynamicResource EntityShapeDataTemplateSelector--><!--
        </Border>-->
    </Grid>
</base:ChartEntityResizeWithViewBoxMoveRotate>
